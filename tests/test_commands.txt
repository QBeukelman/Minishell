=== ONLY PIPES ===

cat "README.md" "Makefile" | wc -w
cat Makefile || wc


=== ONLY REDIRECTS ===
cat tasks.md > grep "a"
cat << EOF > output.txt
'EOF' / "..."
grep aa << EOF
echo hello to this >> input.txt 
cat README.md > input.txt
echo hello > input.txt

bugs:
<<EOF (fixed)
<<EOF<<EOF2<<EOF3 << cat (redirect issue, fixed)
cat <Makefile (gives random char output, other files does not. weird behavior)
echo "hello" >input.txt (quotes expansion, needs work)


=== PIPES AND REDIRECTS ===
cat README.md >> output.txt | grep "a"
grep aa << EOF | wc > out

bugs:
cat <README.md | wc (gives 0 0 0, bash gives 4 4 19)


== VALID PIPES ==
cat Makefile | grep pr | head -n 5 | hello (overwrites commands)
cat tasks.md | wc
cat tasks.md | wc -w | wc
echo hello world | wc > outfile.txt >> outfile.txt
echo hello | wc > outfile.txt
grep aa << EOF | wc
grep aa << EOF < README.md | wc

bugs:
cat | cat | cat | ls (bash does not wait for ls output, ours does + does not auto end, only with a ctrl-d signal)


=== SIGNALS ===
bugs:
heredoc: ctrl-c gives a newline, not sure why
heredoc: ctrl-\ activates quit whilst there is a SIG_IGN for that?

grep aa <<EOF
when aa is typed and you press ctrl-c -> still prints out aa, bash does not do that


=== ENV ===
echo $USER$PATH
