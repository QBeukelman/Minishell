
=== NO SPECIAL CHAR ===

cat "file1" "file2" "file3"


=== ONLY PIPES ===

cat "file1" "file2" | wc -w
test this | and that | three more
what if | there are | pipes | that dont end
what if | there are | pipes that |
cmg arg || cmd arg
cmd arg arg arg arg arg arg arg arg arg arg arg arg arg arg | cmd arg
one 1 2 3 4 5 | two 1 | three 1 | four 1 2 3 | five 1 | six 1 | seven 1
one 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 | two 1 2 3 | three 1


=== ONLY REDIRECTS ===

cmd < input.txt
cmd > output.txt
>> output.txt
echo >>
cat tasks.md > grep "a"
test this > out arg arg arg arg > out2 arg
cat << END > output.txt
'EOF' / "..."
grep aa << EOF
echo hello to this >> input.txt 
cat README.md > input.txt
echo hello > input.txt

bugs:
<<EOF (fixed)
<<EOF<<EOF2<<EOF3 << cat (redirect issue, fixed)
cat <Makefile (gives random char output, other files does not. weird behavior)
echo "hello" >input.txt (quotes expansion, needs work)

=== PIPES AND REDIRECTS ===

cmd >> output.txt | grep "a"
one 1 2 > outfile | two 1 2 3 | three 1 2
one 1 2 > outfile1 > outfile2 > outfile3  3 4 5 6 | two 1 2 3 | three 1 2
one 1 2 > outfile1 > outfile2 > outfile3  3 4 5 6 | cmd with > outfile
one 1 2 > outfile1 > outfile2 > outfile3  3 4 5 6 | cmd with > outfile | more > out > out2 > out3

bugs:
cat <README.md | wc (gives 0 0 0, bash gives 4 4 19)
cat <README.md gives README.md as output. must be some pipes dup2 issue / flow issue

== VALID PIPES ==
cat Makefile | grep pr | head -n 5 | hello (overwrites commands)
cat tasks.md | wc
cat tasks.md | wc -w | wc
echo hello world | wc > outfile.txt >> outfile.txt
echo hello | wc > outfile.txt
grep aa << EOF | wc
grep aa << EOF < README.md | wc

bugs:
cat | cat | cat | ls (bash does not wait for ls output, ours does + does not auto end, only with a ctrl-d signal)

